* install  on a workstation
** init environment

#export SRC_DIR=/project/k01/kortass/CLE6/KSLHUB_TEST3/
#export SRC_DIR=/project/k01/kortass/CLE6/KSLHUB_TEST4/
export SRC_DIR=$PWD
export CONDA_DIR=$SRC_DIR/env
export HUB_PORT=8888
git clone git@github.com:samkos/kslhub.git $SRC_DIR
cd $SRC_DIR


*** install miniconda 3.7
cd $SRC_DIR
mkdir -p BUILD/MINICONDA
cd BUILD/MINICONDA
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
chmod +x ./Miniconda3-latest-Linux-x86_64.sh
./Miniconda3-latest-Linux-x86_64.sh -p $SRC_DIR/miniconda -b

export CONDA_DEFAULT_ENV=$SRC_DIR/miniconda
export CONDA_PREFIX=$SRC_DIR/miniconda
export PATH=$CONDA_DEFAULT_ENV/bin:$PATH
export MANPATH=$CONDA_DEFAULT_ENV/share/man:MANPATH
export LD_LIBRARY_PATH=$CONDA_DEFAULT_ENV/lib:$LD_LIBRARY_PATH
export INCLUDE=$CONDA_DEFAULT_ENV/include:$INCLUDE

*** load miniconda correponding module
ml miniconda/3.7
source activate  $CONDA_DIR

** installing

conda create -y -p $CONDA_DIR pip python=3.7 
source activate  $CONDA_DIR
conda install -y -c  conda-forge/label/cf201901 configurable-http-proxy==3.1.0 nodejs==8.10
conda install -y jupyterlab jupyterhub=0.9.4
jupyter labextension install  @jupyterlab/hub-extension 
jupyter labextension install  @jupyter-widgets/jupyterlab-manager   jupyter-matplotlib


** running from pip package
pip install kslhub
kslhub -h
kslhub --init
kslhub --port $HUB_PORT -f kslhub_config_slurm.py


** debugging on WS
\rm -rf $CONDA_DIR/lib/python3.7/site-packages/jupyterhub*
\rm -rf $CONDA_DIR/lib/python3.7/site-packages/kslhub*
pip install kslhub

#\rm -rf $CONDA_DIR/share/*hub

which kslhub

cd $CONDA_DIR/lib/python3.7/site-packages

\rm -rf $CONDA_DIR/lib/python3.7/site-packages/jupyterhub*
ln -s $SRC_DIR/KSLHUB_GITHUB/jupyterhub/jupyterhub .


\rm -rf $CONDA_DIR/lib/python3.7/site-packages/kslhub*
ln -s $SRC_DIR/KSLHUB_GITHUB/kslhub .

cd $SRC_DIR/KSLHUB_GITHUB/jupyterhub/jupyterhub
ln -s ../jupyterhub .

** running
cd $SRC_DIR
#jupyterhub --port $HUB_PORT -f kslhub_config_direct.py

kslhub --port $HUB_PORT -f kslhub_config_slurm.py
error --> 'error no user identified  

** installation of wrapspwaner optional
git clone https://github.com/jupyterhub/wrapspawner
cd wrapspawner
pip install -r requirements.txt
python setup.py build
python setup.py install

pip install batchspawner







# create dist and wheel file and push to test.pypi
module load python/3.6.4
ml python/3.7.2

* test locally

#ml python/miniconda3-4.5.12
#\rm -rf /home/kortass/KSLHUB_TEST/env
#conda create -y -p /home/kortass/KSLHUB_TEST/env 'python==3.6 ' pip
. /home/kortass/APPS/miniconda3-4.5.12/etc/profile.d/conda.sh
conda activate //home/kortass/KSLHUB_TEST/env
# to install and test locally
pip install -e .
# to install in the local python directory
pip install .

* make package and push it on pypi

# make a pakage and push it
cd //home/kortass/KSLHUB
\rm -rf dist/*
python setup.py sdist bdist_wheel
#twine upload  -r test dist/*
#twine upload   dist/*


# to install from a package made
cd /home/kortass/KSLHUB_TEST
\rm -rf /home/kortass/KSLHUB_TEST/env_test
ml python/miniconda3-4.5.12
conda create -y -p /home/kortass/KSLHUB_TEST/env_test 'python>=3 ' pip
. /home/kortass/APPS/miniconda3-4.5.12/etc/profile.d/conda.sh
conda activate /home/kortass/KSLHUB_TEST/env_test
pip install dist/ksl*tar.gz

kslhub -h
kslhub --init
kslhub --generate-job-templates
kslhub


pip install -i https://test.pypi.org/simple -i https://pypi.org/simple kslhub==0.0.10

* install in docker



docker build -t kslhub -f Dockerfile_slurm_mysql .
dk slurm
dc rm slurm
docker run --name slurm  -h kslhub  -d -p 7000:8000 -p 33333:22 slurm
d logs -f slurm
dct kslhub samkos/slurm


dk kslhub
docker build -t kslhub .
 dk kslhub
dc rm kslhub
docker run --name kslhub -h kslhub  -d -p 10.68.58.171:7000:8000 -p 33333:22 kslhub 
#docker run --name kslhub -h kslhub  -d -p 7007:8000 -p 33333:22 samkos/kslhub
d logs -f kslhub
dct kslhub samkos/kslhub
docker login
docker push samkos/kslhub



dk dev
docker build -t kslhub .
dk dev
dc rm dev
docker run --rm --name dev -h kslhub -e DEV=1 -e HOST_KSLHUB_ROOT=$(echo $PWD | sed 's|/docker.*$||') -e HOST_USER_ID=$(id -u) -e HOST_USER_GID=$(id -g) -v $PWD/..:/home/hub -d -p 10.68.58.171:7000:8000 -p 33333:22 kslhub 
d logs -f dev
db dev
su - hub
id
. ./kslhub_init_env.sh
kslhub -f docker_prod





dk prod
docker build -t kslhub_prod .
dk prod
dc rm prod
docker run --name prod -h kslhub  -d -p 7777:8000 -p 33334:22 kslhub_prod
d logs -f  prod


docker build -t kslhub-debug -f Dockerfile.debug .
dk debug
dc rm debug
docker run --name  debug -h kslhub  -t -i -p 9009:8000 -p 33335:22 kslhub-debug 

inside   kslhub -f docker_prod


on do

de do500
docker pull samkos/kslhub
dk kslhub
dc rm kslhub
docker run --name kslhub -h kslhub  -d -p 8000:8000 -p 33333:22 samkos/kslhub
d logs -f  kslhub


de do500
docker pull samkos/kslhub
docker build -t kslhub_prod .
dk prod
dc rm prod
docker run --name prod -h kslhub  -d -p 000:8000 -p 33334:22 prod
d logs -f  prod




** conda container
docker run -t -i -d -p 9003:9000 --name conda continuumio/anaconda3
d cp /home/kortass/KSLHUB/dist/ksl*tar.gz conda:/root
db conda
qpt-get update
apt install -y gcc
conda install configurable-http-proxy
pip install kslhub

pip install /root/ksl*tar.gz









** build container
cd docker
docker run -d --name=test-mysql8 -e MYSQL_ROOT_PASSWORD=mypassword -e MYSQL_DATABASE=slurm_acct_db -e MYSQL_USER=slurm -e MYSQL_PASSWORD=password mysql:8.0
dct myqsl mysql8_for_slurm


docker run  -e MYSQL_ROOT_PASSWORD=mypassword -e MYSQL_DATABASE=slurm_acct_db mysql8_for_slurm


docker build -t slurm_mysql -f Dockerfile_slurm_mysql .

docker build -t kslhub .
docker run -h kslhub  -t -i -p 8000:8000 -p 33333:22 kslhub 


**** slurm only
cd docker
docker build -t kslhub_slurm_mysql -f Dockerfile_slurm_mysql .
docker run -h kslhub  -t -i -p 8000:8000 -p 33333:22 kslhub_slurm_mysql



** build container  test
cd docker
# docker build --no-cache - t kslhub .
docker build -t slurm-docker-cluster:17.02.11 -f Dockerfile_cluster .
#docker build -t kslhub -f Dockerfile_kslhub .
#docker run -h kslhub -t -i kslhub 

docker build -t kslhub_slurm -f Dockerfile_kslhub_slurm .
docker run -h kslhub  -t -i --privileged -p 8000:8000 -p 33333:22 kslhub_slurm 




docker build -t kslhub_slurm_mysql -f Dockerfile_kslhub_slurm_mysql3 .
docker run -h kslhub  -t -i --privileged -p 8000:8000 -p 33333:22 kslhub_slurm_mysql



docker build -t mysql_ubuntu -f Dockerfile_mysql_ubuntu .
docker run -h  mysql_ubuntu -t -i mysql_ubuntu bash



docker run -d --name=test-mysql8 -e MYSQL_ROOT_PASSWORD=mypassword -e MYSQL_DATABASE=slurm_acct_db -e MYSQL_USER=slurm -e MYSQL_PASSWORD=password mysql:8.0
dct myqsl mysql8_for_slurm
docker build -t kslhub_slurm_mysql -f Dockerfile_kslhub_slurm_mysql5 .
docker run -h kslhub  -t -i -p 8000:8000 -p 33333:22 kslhub_slurm_mysql

docker run -h -t -i kslhub mysql_for_slurm bash

db mysql
mysql -u root -ppassword slurm_acct_db

mysql -u root -pmypassword
mysql
CREATE DATABASE IF NOT EXISTS  slurm_acct_db;
SHOW DATABASES;
SHOW GRANTS FOR 'root'@'localhost';
SHOW GRANTS FOR 'slurm'@'localhost';
GRANT ALL PRIVILEGES ON `slurm_acct_db`.* TO root'@'localhost;
SHOW GRANTS FOR 'slurm'@'kslhub';
GRANT ALL PRIVILEGES ON slurm_acct_db.* TO 'slurm'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'mypassword' WITH GRANT OPTION;
FLUSH PRIVILEGES ;

** run on container
ssh hub
kslhub -f kslhub/config/kslhub_config_docker_slurm.py



* compile the documentation
# to compile the documentation
cd docs
pip  install sphinx
pip  install sphinx_rtd_theme
make html

python -m compileall -f .

* develop/debug

\rm -rf /home/kortass/KSLHUB_TEST/env/lib/python3.6/site-packages/jupyterhub*
\rm -rf /home/kortass/KSLHUB_TEST/env/lib/python3.6/site-packages/kslhub*
\rm -rf /home/kortass/KSLHUB_TEST/env/share/*hub

cd /home/kortass/KSLHUB
pip install .

cd /home/kortass/KSLHUB_TEST/env/lib/python3.6/site-packages
# mv jupyterhub jupyterhub-orig
# ln -s /home/kortass/KSLHUB/kslhub /home/kortass/KSLHUB/jupyterhub/jupyterhub .

\rm -rf /home/kortass/KSLHUB_TEST/env/lib/python3.6/site-packages/kslhub*
ln -s /home/kortass/KSLHUB/kslhub .

cd /home/kortass/KSLHUB/jupyterhub/jupyterhub
ln -s ../jupyterhub .

cd /home/kortass/KSLHUB_TEST/env/share
\rm -rf kslhub
mkdir kslhub 
ln -s /home/kortass/KSLHUB/kslhub/templates kslhub
ln -s /home/kortass/KSLHUB/kslhub/config.py kslhub

export PYTHONPATH=/home/kortass/KSLHUB/jupyterhub:$PYTHONPATH

cd ~/TMP
kslhub 
kslhub -f shaheen_config.py



* develop/debug on shaheen
CONDA_DIR=/project/k01/kortass/CLE6/KSLHUB_TEST/env
ml miniconda/3.7
source activate  $CONDA_DIR

\rm -rf $CONDA_DIR/lib/python3.*/site-packages/jupyterhub*
\rm -rf $CONDA_DIR/lib/python3.*/site-packages/kslhub*
\rm -rf $CONDA_DIR/share/*hub

cd /project/k01/kortass/CLE6/KSLHUB_TEST/KSLHUB_GITHUB
pip install .

cd $CONDA_DIR/lib/python3.*/site-packages
# mv jupyterhub jupyterhub-orig
# ln -s /home/kortass/KSLHUB/kslhub /home/kortass/KSLHUB/jupyterhub/jupyterhub .

\rm -rf $CONDA_DIR/lib/python3.*/site-packages/kslhub*
ln -s /home/kortass/KSLHUB/kslhub .

cd /home/kortass/KSLHUB/jupyterhub/jupyterhub
ln -s ../jupyterhub .

cd $CONDA_DIR/share
\rm -rf kslhub
mkdir kslhub 
ln -s /home/kortass/KSLHUB/kslhub/templates kslhub
ln -s /home/kortass/KSLHUB/kslhub/config.py kslhub

export PYTHONPATH=/home/kortass/KSLHUB/jupyterhub:$PYTHONPATH

cd ~/TMP
kslhub 
kslhub -f shaheen_config.py


* finish installation of jupyterhub
 
# installing NERSC slurm magic  kernel
mkdir -p $SW_BLDDIR/BUILD
cd $SW_BLDDIR/BUILD
git clone https://github.com/NERSC/slurm-magic.git
cd slurm-magic
python setup.py install

cd $SW_BLDDIR/BUILD
jupyter-kernelspec install slurm-magic --sys-prefix

# configuring the extension 
jupyter contrib nbextension install  --sys-prefix
jupyter nbextensions_configurator enable --sys-prefix
jupyter nbextension enable codefolding/main
jupyter nbextension enable --py --sys-prefix widgetsnbextension
#jupyter labextension install @jupyter-widgets/jupyterlab-manager

# configuring the working directory

mkdir -p /scratch/tmp/kslhub/runtime/jupyter /scratch/tmp/kslhub/jobs /scratch/tmp/kslhub/logs
cd $SW_BLDDIR
chmod 3777 runtime jobs logs

ln -s /scratch/tmp/kslhub/runtime .
ln -s /scratch/tmp/kslhub/jobs .
ln -s /scratch/tmp/kslhub/logs .


chmod 3777 $SW_BLDDIR/jobs
chmod 3777 $SW_BLDDIR/runtime/jupyter

  drwxrwxrwt     5 root        root          2822144 Mar 14 15:39 tmp
           ^ sticky bit





* run kslhub
kslhub --init

kslhub --start -f /home/kortass/KSLHUBkslhub/config.py

* documentation
pip install sphinx sphinx_rtd_theme
cd docs
make html



*
/usr/bin/ssh-keygen -A

* troubleshooting
** user not defined
comes from USER environment variable undefined....

Authentication problem migjt be linked with the fact that we are running not in debug mode

** shell not connecting in jupyterlab
could come from a wrong mapping of the container hub  wusing localhost instead of public address of the host

** problem to run as another user
directory /home/hun/.jupyter/migrated has to be created and chmod 777

* todo/to check
** tuning of jupyterlab
> node /home/hub/kslhub_conda_env/lib/python3.7/site-packages/jupyterlab/staging/yarn.js install
yarn install v1.9.4
info No lockfile found.
[1/5] Validating package.json...
[2/5] Resolving packages...
warning @jupyterlab/application > @jupyterlab/apputils > react > fbjs > core-js@1.2.7: core-js@<2.6.5 is no longer maintained. Please, upgrade to core-js@3 or at least to actual version of core-js@2.

* testing


** use case
- spawn a job with requested time exceeding time limit


* urika-xc
ml miniconda/2.7.14
conda create  -p /scratch/kortass/.conda/envs/kslhub_xc  distributed=1.19 bokeh=0.12.7 python=3.6  -y
source activate /scratch/kortass/.conda/envs/kslhub_xc
conda install -y -c  conda-forge/label/cf201901 configurable-http-proxy==3.1.0 nodejs==8.10 

# basic r
conda install -c r r-essentials  -y

# install iRnoteboook suppport (direct version not working yet)
R << EOF
install.packages('IRkernel')
install.packages('IRdisplay')
q()
n
EOF



pip install kslhub
kslhub --jupyter-config


pip install mimesis
